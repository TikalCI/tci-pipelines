@Library ("tci-library") _

pipeline {
    agent { label 'tci-jnlp-node' }
    options {
        timestamps()
        buildDiscarder(logRotator(numToKeepStr: '30'))
        ansiColor('xterm')
    }
    parameters {
        choice (
                choices: 'minimal\nfull',
                description: 'Which tci-master version to build: minimal or full',
                name : 'TYPE')
        string (
                defaultValue: '',
                description: 'tci-master version',
                name : 'VERSION')
    }

    stages {
        stage("Setup") {
            steps {
                script {
                    currentBuild.displayName += " [TYPE] ${params.TYPE} [VERSION] ${params.VERSION}"
                    tciGit.gitCheckout(repoUrl: "git@github.com:TikalCI/tci-bloody-jenkins.git", dir: "tci-bloody-jenkins", branch: "master")
                    tciGit.gitCheckout(repoUrl: "git@github.com:TikalCI/tci-master.git",dir: "tci-master", branch: "master")
                    sh '''
                            echo "before checkout"
                            echo "build customized plugins.txt"
                            cp tci-bloody-jenkins/plugins.txt plguins.txt
                            cat tci-master/src/resources/tci/plugins-${TYPE}.txt >> plugins.txt
                            cat plugins.txt | sort > tci-bloody-jenkins/plugins.txt
                        '''
                }
            }
        }
        stage("Docker build") {
            steps {
                script {
                    docker.build("tikalci/tci-master-${params.TYPE}:latest","tci-bloody-jenkins")
                    docker.tag("tikalci/tci-master-${params.TYPE}:latest","tikalci/tci-master-${params.TYPE}:${params.VERSION}")
                }
            }
        }
        stage("Publish") {
            when {
                expression { return params.PUBLISH }
            }
            steps {
                script {
                    docker.push("tikalci/tci-master-${params.TYPE}:latest")
                    docker.push("tikalci/tci-master-${params.TYPE}:${params.VERSION}")
                }
            }
        }
    }
}
